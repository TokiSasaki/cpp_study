/*****************************************************************************
	order			: My make sort library
	compiler		: x86_64-w64-mingw32-gcc (cygwin x64)
	file name		: Sorter.cpp
					: 
	creation date	: 2016-07-05
*****************************************************************************/
/*
	History of revision
*/

/*****************************************************************************
	include, namespace
*****************************************************************************/
#include <iostream>
#include "Sorter.hpp"

/*****************************************************************************
	define
*****************************************************************************/

/*****************************************************************************
	class, structure
*****************************************************************************/

/*****************************************************************************
	external variables
*****************************************************************************/

/*****************************************************************************
	internal variables
*****************************************************************************/

/*****************************************************************************
	prototype declaration
*****************************************************************************/

using namespace std;

/*****************************************************************************
	discription	: 
	argument	: 
	return		: 
				: 
	note		: 
	update		: 
*****************************************************************************/
Algorythm::Algorythm()
{
	this->iSize = 0;
	this->piData = NULL;
}

/*****************************************************************************
	discription	: 
	argument	: 
	return		: 
				: 
	note		: 
	update		: 
*****************************************************************************/
Algorythm::Algorythm(int iSize)
{
	this->iSize = iSize;
	this->piData = new int[iSize];
}

/*****************************************************************************
	discription	: 
	argument	: 
	return		: 
				: 
	note		: 
	update		: 
*****************************************************************************/
Algorythm::~Algorythm()
{
	delete [] this->piData;
	this->piData = NULL;
}

/*****************************************************************************
	discription	: 
	argument	: 
	return		: 
				: 
	note		: 
	update		: 
*****************************************************************************/
int Algorythm::show()
{
	int i;
	for(i = 0; i < this->iSize; i++){
		cout << this->piData[i] << endl;
	}
	return 0;
}

